include(FetchContent)

# overwrite target creation macro to add dependencies folder property
set(SET_DEPENDENCY_PROP TRUE)
macro(add_library _target)
    _add_library(${_target} ${ARGN})
    if (SET_DEPENDENCY_PROP)
        get_target_property(originalTarget ${_target} ALIASED_TARGET)
        if (${originalTarget} STREQUAL "originalTarget-NOTFOUND")
          if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.19.0")
            set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
          else()
            get_target_property(link_type ${_target} TYPE)
            if (NOT link_type STREQUAL "INTERFACE_LIBRARY")
              set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
            endif()
          endif()
        endif()
    endif()
endmacro()
macro(add_executable _target)
    _add_executable(${_target} ${ARGN})
    if (SET_DEPENDENCY_PROP)
        get_target_property(originalTarget ${_target} ALIASED_TARGET)
        if (${originalTarget} STREQUAL "originalTarget-NOTFOUND")
          if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.19.0")
            set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
          else()
            get_target_property(link_type ${_target} TYPE)
            if (NOT link_type STREQUAL "INTERFACE_LIBRARY")
              set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
            endif()
          endif()
        endif()
    endif()
endmacro()
macro(add_custom_target _target)
    _add_custom_target(${_target} ${ARGN})
    if (SET_DEPENDENCY_PROP)
        get_target_property(originalTarget ${_target} ALIASED_TARGET)
        if (${originalTarget} STREQUAL "originalTarget-NOTFOUND")
          if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.19.0")
            set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
          else()
            get_target_property(link_type ${_target} TYPE)
            if (NOT link_type STREQUAL "INTERFACE_LIBRARY")
              set_target_properties(${_target} PROPERTIES FOLDER "Dependencies")
            endif()
          endif()
        endif()
    endif()
endmacro()

################################################################################
# local dependencies
################################################################################

# boost
add_subdirectory(boost)
